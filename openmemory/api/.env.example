# 下面是必要的配置
NEO4J_URI=neo4j://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=mem0graph

# 容器部署时请将 QDRANT_URL 设置为服务名
QDRANT_URL=http://mem0_store:6333

OPENAI_API_KEY=sk-or-v1-
OPENAI_BASE_URL=https://openrouter.ai/api/v1
OPENAI_COMPLETION_MODEL=qwen/qwen3-235b-a22b:free

OPENAI_EMBEDDING_BASE_URL=https://api.siliconflow.cn/v1
OPENAI_EMBEDDING_API_KEY=sk-
OPENAI_EMBEDDING_MODEL=BAAI/bge-m3
OPENAI_EMBEDDING_DIMENSION=1024

# 下面是main.py在加载配置文件时的具体实现
# 默认会初始化qdrant作为向量数据库，如果需要使用其他的向量数据库，请在main.py中修改
# NEO4J的配置项
# NEO4J_URI = os.environ.get("NEO4J_URI", "bolt://neo4j:7687")
# NEO4J_USERNAME = os.environ.get("NEO4J_USERNAME", "neo4j")
# NEO4J_PASSWORD = os.environ.get("NEO4J_PASSWORD", "mem0graph")
#
# POSTGRES的配置项
# POSTGRES_HOST = os.environ.get("POSTGRES_HOST", "postgres")
# POSTGRES_PORT = os.environ.get("POSTGRES_PORT", "5432")
# POSTGRES_DB = os.environ.get("POSTGRES_DB", "postgres")
# POSTGRES_USER = os.environ.get("POSTGRES_USER", "postgres")
# POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD", "postgres")
# POSTGRES_COLLECTION_NAME = os.environ.get("POSTGRES_COLLECTION_NAME", "memories")

# NEO4J的配置项
# NEO4J_URI = os.environ.get("NEO4J_URI", "bolt://neo4j:7687")
# NEO4J_USERNAME = os.environ.get("NEO4J_USERNAME", "neo4j")
# NEO4J_PASSWORD = os.environ.get("NEO4J_PASSWORD", "mem0graph")
#
# MEMGRAPH_URI = os.environ.get("MEMGRAPH_URI", "bolt://localhost:7687")
# MEMGRAPH_USERNAME = os.environ.get("MEMGRAPH_USERNAME", "memgraph")
# MEMGRAPH_PASSWORD = os.environ.get("MEMGRAPH_PASSWORD", "mem0graph")

# 这个是符合OPENAI规范的大模型的配置项
# OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")
# OPENAI_BASE_URL = os.environ.get("OPENAI_BASE_URL", "https://api.openai.com/v1")
# OPENAI_COMPLETION_MODEL = os.environ.get("OPENAI_COMPLETION_MODEL", "gpt-4o")

# 这个是符合OPENAI规范的嵌入模型的配置项
# 这个是嵌入模型的API地址和密钥
# OPENAI_EMBEDDING_BASE_URL = os.environ.get(
#     "OPENAI_EMBEDDING_BASE_URL", "https://api.openai.com/v1"
# )
# OPENAI_EMBEDDING_API_KEY = os.environ.get("OPENAI_EMBEDDING_API_KEY")
# 这个是你使用的嵌入模型（embedding模型）的名称
# OPENAI_EMBEDDING_MODEL = os.environ.get(
#     "OPENAI_EMBEDDING_MODEL", "text-embedding-3-small"
# )
# 这个是你使用的embedding模型的向量维度
# OPENAI_EMBEDDING_DIMENSION = os.environ.get("OPENAI_EMBEDDING_DIMENSION", 1536)

# 这是Qdrant向量数据库的配置项
# QDRANT_URL = os.environ.get("QDRANT_URL", "http://localhost:6333")
# QDRANT_COLLECTION_NAME = os.environ.get("QDRANT_COLLECTION_NAME", "memories")
# QDRANT_API_KEY=your-api-key-here
# QDRANT_PATH=/path/to/local/storage # For local file-based storage
# QDRANT_HOST=localhost # Alternative to URL
# QDRANT_PORT=6333 # Alternative to URL